var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/blog/chatbot-isnt-the-solution-to-everything/",title:"Chatbot Isn't the Solution to Everything",description:"Do not build a chatbot because you wanted to.",content:`In the era of advanced technology, it&rsquo;s tempting to believe that chatbots hold the answer to all our customer engagement needs. However, it&rsquo;s important to approach this notion with a critical mindset. While chatbots have undoubtedly made significant progress, we must acknowledge that they are not a one-size-fits-all solution. Let&rsquo;s explore why this is the case.
Evolution of Chatbots # Chatbots have come a long way, thanks to the advancements in large language models. Some notable ones include OpenAI&rsquo;s ChatGPT, Google&rsquo;s Bard, and Facebook&rsquo;s LLaMA. These models have revolutionized the capabilities of chatbots, enabling them to provide more human-like responses and handle complex conversations. However, it&rsquo;s crucial to recognize that even with these advancements, chatbots have their limitations.
When it comes to building chatbots, there are two primary approaches you can take:
Building a Chatbot # Utilizing existing bot frameworks: Frameworks like Rasa, Dialogflow, and Microsoft Bot Framework offer powerful tools and pre-trained functions. These frameworks can handle tasks such as named entity recognition, allowing the chatbot to extract relevant information like locations and dates from conversations. Deployment costs are relatively lower, and you can integrate your chatbot with popular messaging services such as Facebook Messenger, Telegram, and WhatsApp. Additionally, there are innovative AI chatbot companies like Mindlayer and Claire.ai that are worth exploring.
Training your own model: This approach involves training a chatbot using your own custom model. It provides a high level of customization, enabling you to build conversation-aware bots rather than relying on rule-based systems. This approach is particularly useful for industries with specific domain knowledge requirements. For example, in the insurance industry, a chatbot can assess customers&rsquo; risk levels by asking targeted questions. Training your own model is often pursued for research and development purposes or by startups looking to create cutting-edge products.
Purpose of the Chatbot # To ensure the success of a chatbot solution, we need to consider various factors:
Specific Services: Determine the specific services you want to integrate into the chatbot. Not all tasks or industries are well-suited for chatbot interactions. Carefully evaluate whether a chatbot can effectively address your customers&rsquo; needs and provide value in your particular context.
Clarity of Functionality: Can users understand what the chatbot can do within the first minute of interaction? It&rsquo;s crucial to design the chatbot&rsquo;s capabilities in a way that is immediately apparent to users. Clear and concise communication about its functionalities will prevent frustration and confusion.
Deriving Insights: Consider whether the chatbot conversations can provide useful insights. While chatbots can collect valuable data, it&rsquo;s important to assess whether the information gathered can genuinely enhance your understanding of user preferences and behavior.
Continuity of Support: Do you have ad-hoc or follow-up services after the user leaves the chatbot? Seamless transitions and additional support beyond the chatbot interaction are essential to ensure a positive customer experience.
Beyond the Hype # It&rsquo;s crucial to remember that chatbots are not a panacea. They should be seen as one tool among many in your customer engagement arsenal. Relying solely on chatbots may limit your ability to address complex or sensitive issues that require human intervention.
By adopting a thoughtful and critical approach, we can make informed decisions about when and how to implement chatbots effectively. Understanding their strengths and limitations allows us to create engaging customer experiences while also recognizing the need for human interaction.
`}),e.add({id:1,href:"/blog/in-2022-blockchain-is-here-to-stay/",title:"In 2022, Blockchain is Here to Stay",description:"The crypto industry faced significant challenges in 2022, but blockchain technology remains strong, and users should evaluate a project's true utility to make informed investment decisions.",content:`TL;DR # The crypto industry faced significant challenges in 2022, including breaches on cross-chain bridges, crashes, bankruptcies, and distrust among users. However, blockchain technology remains strong and transformative across various industries.
The vulnerabilities and attacks in the crypto space are often due to the implementation and security measures surrounding cryptocurrencies and decentralized finance platforms, not the blockchain technology itself.
To avoid risks, users should be cautious of projects with red flags, conduct thorough research on a project&rsquo;s true utility, and evaluate its potential impact and long-term viability before making investment decisions.
Reality Check # Year 2022 is a reality check for everybody involved in the crypto space. According to Chainalysis, around US$1.4 billion were lost to breaches on cross-chain bridges this year. With several detrimental events piling up, starting from May: LUNA crash, cross-chain bridges getting hacked (e.g. Ronin, Harmony, Nomad etc.), centralized finance (Ce-Fi) services going bankrupt (e.g. Celsius), crypto VC Firms going bankrupt (e.g. 3AC), it is apparent that the crypto industry is facing significant challenges. However, amidst these setbacks, one thing remains certain: blockchain technology is here to stay in 2022 and beyond.
Despite the negative headlines and market volatility, it is important to recognize that blockchain technology itself is not the cause of these issues. Instead, it is the implementation and security measures surrounding cryptocurrencies and decentralized finance (DeFi) platforms that have been vulnerable to attacks.
We need to ask the question: Why do these scenarios keep happening? The repeated mistakes being made during the lifecycle of crypto products put users’ funds at great risk. These blatant rug-pulls, ‘accidental’ hacks, insolvencies, incompetencies of company leaders in the space, and the distrust among users are obvious red flags the average crypto user should avoid.
Blockchain technology, at its core, offers unparalleled transparency, security, and decentralization. These qualities make it a transformative force across various industries, including finance, supply chain management, healthcare, and more. As we move forward, it is crucial to focus on strengthening the infrastructure and security surrounding blockchain-based systems.
From a product development perspective, crypto products in general have a much shorter feature-to-market cycle. New features get shipped within weeks rather than months, compared to the much longer cycle of Web 2.0 products. Also, there aren’t many tooling around to properly test and QC features before they get pushed to production. The revenue brought by running these quick product iterations outweigh the cost of implementing proper checks. For example, the Harmoney Bridge is designed such that only 2 addresses from the multisig wallet are needed to approve transactions. That means, a malicious actor only has to gain access to 2 addresses to launch an attack on the 330M funds entrusted on the bridge. If they had conducted bug bounty programmes or have thoroughly audited the security design of their product, the attack vector could have be minimized.
From a business development perspective, as more and more native blockchains emerge, the need to provide interopability among multiple chains propells developers to rely on cross-chain bridges. Users that are provided with more liquidity and flexibility on their tokens, however, are also faced with more risk. This opens up the attack vector for hackers to compromise bridges and put users’ funds in harms way. The eventual merging of multichain into a single chain will sure be a long-winded progress and for crypto product teams this is has always been a choice between security and scalability (see more on The Blockchain Trilemma by Certik).
True Utility &amp; Perceived Value # Distinguishing between true utility and perceived value is crucial for builders and investors. 2022 has seen a surge in cashgrab crypto projects (cashgrabs) that often end in rug-pulls, leaving investors high and dry. These projects are well-promoted, causing token prices to skyrocket before crashing. In contrast, during the Crypto Winter, there is less motivation to quickly launch products due to the lowered value of tokens.
For cashgrabs operators, it becomes more expensive to hype token prices during a bull run. This provides an opportunity for average crypto investors to evaluate the true utility of a product in these market conditions. It becomes easier to separate the muck (true utility) from the mire (perceived value of the token).
True utility refers to the practical benefits and functionality a crypto project offers, solving real-world problems or providing innovative solutions. Perceived value, on the other hand, is often influenced by hype, marketing tactics, and speculative behavior in the market. It can lead to inflated token prices not necessarily backed by the project&rsquo;s substance or long-term viability.
To make informed investment decisions, crypto investors should carefully evaluate a project&rsquo;s true utility. Thorough research, analysis of the whitepaper, assessment of the team&rsquo;s expertise, and considering the project&rsquo;s potential impact are essential. Investors should be wary of projects relying solely on hype and marketing buzz without offering substantial utility. By focusing on technology, real-world use cases, and the project&rsquo;s ability to deliver tangible value, investors can mitigate risks associated with cashgrabs and make more informed choices.
`}),e.add({id:2,href:"/blog/how-to-move-wordpress-to-a-subdirectory/",title:"How To Move Wordpress To a Subdirectory",description:"Steps to move Wordpress to a subdirectory.",content:" Change .htaccess in the subdirectory, i.e. example, where Wordpress now sits # BEGIN WordPress &lt;IfModule mod_rewrite.c&gt; RewriteEngine On RewriteBase /example RewriteRule ^index\\.php$ - [L] RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule . /example/index.php [L] &lt;/IfModule&gt; # END WordPress Edit wp-config.php and add the following lines define('WP_HOME','https://domain.com/example'); define('WP_SITEURL','https://domain.com/example'); "}),e.add({id:3,href:"/blog/why-i-enjoy-joining-hackathons/",title:"Why I Enjoy Joining Hackathons",description:"Make it worthwhile. Don't beat around the bush. Make something!",content:`On April 22, I joined hackUST 2017, a hackathon organized by HKUST Entrepreneurship Center. For those who are still wondering: A hackathon is an event where groups of designers, idea-generators, technology experts get together to solve a problem under 24 or 36 hours, backed by technology and business ideas.
I wrote this piece because I wanted to not only document what happened, but raise awareness on hacker’s mentality.
How It Began # People join hackathons for all sorts of reasons:
cool swag free food free accommodation (in larger hackathons) I have to admit, that in our university, the hacking spirit is not in every student. Most of us could not join because of coursework or exam dealines. So I am also grateful for just being able to join the hackathon.
“This would be the last hackathon before I graduate.”, I thought to myself, “Make it worthwhile. Don’t beat around the bush. Make something!”
(skip to the hackathon details here)
The first hackathon I joined, was one called CodeIT Suisse, a hackathon held by Credit Suisse. I partnered with 3 fellow students. We didn’t know one another. At the end, I realized how unsufficient my knowledge was. I realized I was incompetent. I wasn’t able to contribute anything in that hackathon.
They know so much. Why can’t I?
I started to code in highschool, starting from C and basic Wordpress authoring. At that time, I was not even aware of setting up servers or mobile apps. Fast-forward to college, all I knew was some Python and C++ and making offline, non-reusable applications for course work. I seldom spend time on personal projects, mostly because I lacked the motivation.
I am more intrigued by the latest technology news or release of a new tool than completing assignments. This period of me beating around the bush lasted for a few years, while I wasted time on chasing trends.
Mentality # “I want to win the hackathon.”, I said to myself.
I got the skills and time and determination. I just needed a team of good people, people who also want to win, to make this come true.
I want our team’s idea to be solid and battle-tested (meaning we can answer difficult questions from the judge in the Q&amp;A).
What Makes A Good Hackathon Solution # Business
Business Model
How does it make money? Who will pay you? Tech + Design User Design (UI/UX)
Colors Shapes Animations Functional Design (Code) Efficiency Elegance It has to work! A Good Pitch Story
Painpoint(s) Solution Why it works? How it works? Evaluate (demo time) Future outlook Further Reading # Secret Sauce for Winning a Hackathon Presentations at Uber: The Gift of Giving `}),e.add({id:4,href:"/blog/solving-string-similarity-in-sql/",title:"Solving String Similarity in SQL",description:"Steps to solve string similarity in SQL.",content:`Problem # The main focus today was to identify the similarity between two strings and derive the relevant records from a query.
To better illustrate this, let’s look at a sample table:
id string mjZThqXnp7 QB1934 odGf0DZuUR JU9910 jemvgDUw6T UJ991 xkVGZbpG05 DF987 MtaNYMMgkV FL9111 jqZCZI0Fdn AM9114 xRNLSPEdAY AM914 yMDC1QNNMc P1N9 YAmabwCWla JU990 Tsoc1lqG6I Q1934B If we are using JU991 as input, the expected output would be
id string odGf0DZuUR JU9910 jemvgDUw6T UJ991 YAmabwCWla JU990 When you look at the results closely, you will identify the changes needed to change the input string to match the derived strings:
Delete character(s) from the beginning/end Add characters(s) from the beginning/end Switch position for two characters So, how do we create conditions that can catch the above changes?
Implementation: Condition 1 and 2 # For conditions 1 and 2, we can do so by applying the formula:
abs(len(input) - len(record[i])) to get the absolute value as ‘difference’ between two strings, and then
isSubstringOf(input, record[i]) to determine whether the record is a substring of the input.
Implementation: Condition 3 # This is a bit more tricky, because there exist a pretty straightforward solution:
sort(input) == sort(record[i]) However, I was not allowed to do so due to language constraints and there was no available sorting function. Gladly, a hard-coded solution came up:
sum( positionOf('a', record[i]) == positionOf('a', input) positionOf('b', record[i]) == positionOf('b', input) positionOf('c', record[i]) == positionOf('c', input) ... positionOf('A', record[i]) == positionOf('A', input) positionOf('B', record[i]) == positionOf('B', input) positionOf('C', record[i]) == positionOf('C', input) ... positionOf('0', record[i]) == positionOf('0', input) positionOf('1', record[i]) == positionOf('1', input) positionOf('2', record[i]) == positionOf('2', input) ... ) It is to count the sum of existing alphanumeric characters of the input and record. The same count means they are permutations of each other.
Hope this post can help those out there solving similarity problems!
`}),e.add({id:5,href:"/project/chatbot-powered-by-chatgpt/",title:"Chatbot Powered by ChatGPT",description:"An AI Chatbot Powered by ChatGPT with RAG on custom content",content:`RAG Implementation and Prompt Engineering # To implement RAG, we employed a two-step process: retrieval and generation. In the retrieval step, semantic similarity is the metric used to identify relevant blog content. This enabled the chatbot to retrieve accurate and up-to-date information to support its responses. We carefully engineered the prompts to encourage the chatbot to reference the blog content and reduce the risk of hallucination.
The generation step involved ChatGPT, which generated responses based on the retrieved information. By combining retrieval and generation, the chatbot was able to provide contextually relevant and accurate answers to user queries. This approach allowed us to strike a balance between the creativity of language models and the reliability of retrieved information.
Challenges and Solutions # One of the main challenges was mitigating the issue of hallucination, where the chatbot generates responses that may not be accurate or reliable. To address this, we focused on prompt engineering and fine-tuning the retrieval mechanism to prioritize factual information from the blog content.
Another challenge was ensuring that the chatbot could handle a wide range of user queries. We implemented a robust intent classification system to understand user intents and direct them to the appropriate sections of the blog content. Additionally, we continuously monitored user interactions and collected feedback to improve the chatbot&rsquo;s performance over time.
`}),e.add({id:6,href:"/project/photography-studio-booking-system/",title:"Photography Studio Booking System",description:"An availability-first photography studio booking system",content:`Intelligent Booking System # In response to the client&rsquo;s objective of optimizing time utilization, a crucial feature was requested: the ability to schedule 15-minute bookings within 10-minute time slots, thereby maximizing the number of daily bookings.
To accomplish this, I have crafted a conditional check within the booking system. This check enables the booking of 10-minute slots when all 15-minute slots have been reserved. By implementing this mechanism, the the available time slots are utilized to their fullest potential, while customers are able to modify or cancel their bookings in their own accord.
With this unique solution in place, the photo studio&rsquo;s booking system can now accommodate more appointments, ultimately enhancing overall efficiency and customer satisfaction.
`}),e.add({id:7,href:"/blog/",title:"Blog",description:"The Doks Blog.",content:""}),e.add({id:8,href:"/projects/",title:"Projects",description:"Jonathan Ma - Projects",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()